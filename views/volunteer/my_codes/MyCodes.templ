package pages

import (
	"fmt"
	"reyes-magos-gr/db/model"
	"reyes-magos-gr/lib"
	layout "reyes-magos-gr/views"
	"reyes-magos-gr/views/components"
)

script onShareHandler(code string) {
  shareCode(code);
}

script onCopyHandler(code string) {
  copyCode(code);
}

templ MyCodeItem(code model.Code) {
	<li class="col-span-1 flex flex-col first-line: rounded-lg shadow" id={ fmt.Sprintf("volunteer-code-%d", code.CodeID) }>
		<div class="p-4 flex-1 rounded-lg border-gray-400 bg-white shadow">
			<p class="text-lg text-gray-900 hover:text-gray-600">{ code.Code }</p>
			<p class="text-gray-500">Exp: { lib.FormatDate(code.Expiration) }</p>
		</div>
		if code.Given == 1 {
			<div class="h-full w-full p-2 text-center bg-gray-200 text-gray-500 text-sm font-semibold">
				Regalado
			</div>
		} else {
			<div class="flex">
				<button
					type="button"
					class="relative flex-1 inline-flex items-center rounded-l-md justify-center bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
					onclick={ onCopyHandler(code.Code) }
				>
					Copy <img class="inline-block h-4 w-4 ml-4" src="/public/img/clipboard.svg" alt="" role="presentation"/>
				</button>
				<button
					type="button"
					class="relative flex-1 inline-flex items-center  justify-center bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
					onclick={ onShareHandler(code.Code) }
				>
					Share <img class="inline-block h-4 w-4 ml-4" src="/public/img/share.svg" alt="" role="presentation"/>
				</button>
				<button
					type="button"
					class="relative -ml-px flex-1 inline-flex items-center rounded-r-md justify-center bg-brand-orange px-3 py-2 text-sm font-semibold text-white ring-1 ring-inset ring-gray-300"
					hx-post={ string(templ.URL(fmt.Sprintf("/volunteer/mycodes/give/%d", code.CodeID))) }
					hx-target={ fmt.Sprintf("#volunteer-code-%d", code.CodeID) }
				>
					Give 
					<svg aria-hidden="true" class="h-4 w-4 ml-4 text-white">
						<use href="/public/img/gift.svg#checkCircle" fill="white"></use>
					</svg>
				</button>
			</div>
		}
	</li>
}

templ MyCodes(codes []model.Code, givenCodes []model.Code) {
	@layout.Base() {
		<h1 class="text-center pt-8 text-2xl">My Codes</h1>
		<section id="my_codes" class="relative isolate px-6 py-20 lg:px-8">
			@components.Stats("Codes Stats", []components.Stat{
				{Name: "Available Codes", Value: fmt.Sprint(len(codes))},
				{Name: "Given Codes", Value: fmt.Sprint(len(givenCodes))},
			})
			if len(codes) > 0 {
				<div class="py-20">
					<h2 class="text-lg font-semibold leading-6 text-gray-900">Available Codes</h2>
					<ul role="list" id="mycodes-code-list" class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4">
						for _, code := range codes {
							@MyCodeItem(code)
						}
					</ul>
				</div>
			}
			if len(givenCodes) > 0 {
				<div class="py-20">
					<h2 class="text-lg font-semibold leading-6 text-gray-900">Given Codes</h2>
					<ul role="list" id="mycodes-code-list" class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4">
						for _, code := range givenCodes {
							@MyCodeItem(code)
						}
					</ul>
				</div>
			}
		</section>
	}
}
